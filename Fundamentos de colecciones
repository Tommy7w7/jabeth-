import pickle

# Clase Producto
class Producto:
    def __init__(self, producto_id, nombre, cantidad, precio):
        self.producto_id = producto_id
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio

    # Métodos para obtener y establecer atributos
    def get_id(self):
        return self.producto_id

    def get_nombre(self):
        return self.nombre

    def get_cantidad(self):
        return self.cantidad

    def get_precio(self):
        return self.precio

    def set_cantidad(self, cantidad):
        self.cantidad = cantidad

    def set_precio(self, precio):
        self.precio = precio

# Clase Inventario
class Inventario:
    def __init__(self):
        self.productos = {}

    def agregar_producto(self, producto):
        self.productos[producto.get_id()] = producto

    def eliminar_producto(self, producto_id):
        if producto_id in self.productos:
            del self.productos[producto_id]

    def actualizar_producto(self, producto_id, cantidad=None, precio=None):
        if producto_id in self.productos:
            producto = self.productos[producto_id]
            if cantidad is not None:
                producto.set_cantidad(cantidad)
            if precio is not None:
                producto.set_precio(precio)

    def buscar_producto_por_nombre(self, nombre):
        resultados = [p for p in self.productos.values() if p.get_nombre() == nombre]
        return resultados

    def mostrar_todos_los_productos(self):
        return list(self.productos.values())

# Función para guardar el inventario en un archivo
def guardar_inventario(inventario, archivo):
    with open(archivo, 'wb') as f:
        # Convertir los productos en un formato serializable
        productos_serializados = {
            prod_id: {
                'nombre': prod.get_nombre(),
                'cantidad': prod.get_cantidad(),
                'precio': prod.get_precio()
            }
            for prod_id, prod in inventario.productos.items()
        }
        pickle.dump(productos_serializados, f)

# Función para cargar el inventario desde un archivo
def cargar_inventario(archivo):
    inventario = Inventario()
    with open(archivo, 'rb') as f:
        productos_serializados = pickle.load(f)
        for producto_id, producto_data in productos_serializados.items():
            producto = Producto(
                producto_id,
                producto_data['nombre'],
                producto_data['cantidad'],
                producto_data['precio']
            )
            inventario.agregar_producto(producto)
    return inventario

# Función de menú
def menu():
    inventario = Inventario()

    while True:
        print("\nMenú:")
        print("1. Agregar producto")
        print("2. Eliminar producto")
        print("3. Actualizar producto")
        print("4. Buscar producto por nombre")
        print("5. Mostrar todos los productos")
        print("6. Guardar inventario")
        print("7. Cargar inventario")
        print("8. Salir")
        
        opcion = input("Elija una opción: ")

        if opcion == '1':
            producto_id = input("ID: ")
            nombre = input("Nombre: ")
            cantidad = int(input("Cantidad: "))
            precio = float(input("Precio: "))
            producto = Producto(producto_id, nombre, cantidad, precio)
            inventario.agregar_producto(producto)
        
        elif opcion == '2':
            producto_id = input("ID del producto a eliminar: ")
            inventario.eliminar_producto(producto_id)
        
        elif opcion == '3':
            producto_id = input("ID del producto a actualizar: ")
            cantidad = input("Nueva cantidad (deje en blanco si no se actualiza): ")
            precio = input("Nuevo precio (deje en blanco si no se actualiza): ")
            inventario.actualizar_producto(
                producto_id,
                cantidad=int(cantidad) if cantidad else None,
                precio=float(precio) if precio else None
            )
        
        elif opcion == '4':
            nombre = input("Nombre del producto a buscar: ")
            productos = inventario.buscar_producto_por_nombre(nombre)
            for producto in productos:
                print(f"ID: {producto.get_id()}, Nombre: {producto.get_nombre()}, Cantidad: {producto.get_cantidad()}, Precio: {producto.get_precio()}")
        
        elif opcion == '5':
            productos = inventario.mostrar_todos_los_productos()
            for producto in productos:
                print(f"ID: {producto.get_id()}, Nombre: {producto.get_nombre()}, Cantidad: {producto.get_cantidad()}, Precio: {producto.get_precio()}")
        
        elif opcion == '6':
            archivo = input("Nombre del archivo para guardar: ")
            guardar_inventario(inventario, archivo)
        
        elif opcion == '7':
            archivo = input("Nombre del archivo para cargar: ")
            inventario = cargar_inventario(archivo)
        
        elif opcion == '8':
            break
        
        else:
            print("Opción no válida. Inténtelo de nuevo.")

if __name__ == "__main__":
    menu()

